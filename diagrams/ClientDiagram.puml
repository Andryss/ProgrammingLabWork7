@startuml

package Client {
    class ClientConnector {
    --Methods--
    ~ static initialize(InetAddress serverAddress, int port) : void
    - static setConnection(InetAddress serverAddress, int port) : void
    - static checkConnection() : void
    + static sendToServer(Request request) : Response
    ~ static sendRequest(Request request) : void
    - static sendPacket(byte[] buf) : void
    - static acceptResponse() : Response
    - static receivePacket(byte[] buf) : void
    }

    class ClientController {
    --Methods--
    ~ static initialize() : void
    + static *readLine*
    + static *print*
    ~ static readServerAddress() : InetAddress
    ~ static readLogin() : String
    ~ static readPassword() : String
    }

    class ClientExecutor {
    --Methods--
    ~ static initialize() : void
    - static fillCommandMap() : void
    ~ static parseCommand(String inputLine) : void
    - static executeCommand(String commandName, String[] args) : void
    + static getCommandMap() : HashMap<String,Command>
    + static getRequest() : Request
    }

    class ClientINFOImpl {
    --Methods--
    * (implemented from ClientINFO)
    }

    class ClientManager {
    --Methods--
    + static run(int port) : void
    - static connectionStep(int port) : void
    - static loginRegisterStep() : void
    - static loginStep() : boolean
    - static registerStep() : boolean
    - static lrstep(RequestType requestType, ResponseType responseTypeSuccess, ResponseType responseTypeFail) : boolean
    - static addLogoutHook() : void
    - static executionStep() : void
    }

    class RequestImpl {
    --Methods--
    * (implemented from Request)
    }

    class RequestBuilder {
    --Methods--
    + static createNewRequest(RequestType requestType) : Request
    + static createNewRequest(RequestType requestType, Integer checkingIndex) : Request
    + static createNewRequest(RequestType requestType, String commandName) : Request
    + static setUserProfile(UserProfile userProfile) : void
    + static getUserProfile() : UserProfile
    }

    package File {
        class FileController {
        --Methods--
        + readLine() : String
        + hasNextLine() : boolean
        + getFileName() : String
        }

        class FileExecutor {
        --Methods--
        - fillCommandMap() : void
        ~ parseCommand(String inputLine) : void
        - executeCommand(String commandName, String[] args) : void
        + getCaller() : FileExecutor
        + getFileName() : String
        + getCommandNumber() : int
        }

        class FileManager {
        --Methods--
        + buildRequest() : void
        }
    }
}

@enduml