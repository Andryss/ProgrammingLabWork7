@startuml

package Commands {
    class CommandException {
    --Fields--
    - final String command
    - final String reason
    }

    class BadArgumentsException extends CommandException {
    --Fields--
    - static final Map<String, String> examples = new HashMap<>()
    }

    class BadArgumentsCountException extends BadArgumentsException {
    --Fields--
    - final int requiredCount
    }

    class BadArgumentsFormatException extends BadArgumentsException {
    --Fields--
    - final String requiredFormat
    }

    class UndefinedCommandException extends CommandException {
    }

    interface Command {
    --Methods--
    execute(ServerExecutor.ExecuteState state, ServerINFO server) : boolean
    setArgs(String... args) : void
    default buildRequest() : void
    }

    abstract class NameableCommand implements Command {
    --Fields--
    - final String commandName
    }

    abstract class ElementCommand extends NameableCommand {
    --Fields--
    - static final Map<String, String> fieldExamples = new HashMap<>()
    - static final Map<String, Method> methodsSetters = new HashMap<>()
    - static final Map<Integer, String> order = new HashMap<>()
    - final transient boolean readingFromFile
    # transient Scanner reader
    # Integer key
    # Movie readMovie
    }

    class ClearCommand extends NameableCommand {
    }

    class CountLessThenLengthCommand extends NameableCommand {
    }

    class ExecuteScriptCommand extends NameableCommand {
    --Fields--
    - File file
    - final FileExecutor caller
    }

    class ExitCommand extends NameableCommand {
    }

    class FilterByMpaaRatingCommand extends NameableCommand {
    }

    class GroupCountingByLengthCommand extends NameableCommand {
    }

    class HelpCommand extends NameableCommand {
    }

    class HistoryCommand extends NameableCommand {
    }

    class InfoCommand extends NameableCommand {
    }

    class InsertCommand extends ElementCommand {
    }

    class RemoveKeyCommand extends NameableCommand {
    }

    class RemoveLowerKeyCommand extends NameableCommand {
    }

    class ReplaceIfGreaterCommand extends ElementCommand {
    }

    class ShowCommand extends NameableCommand {
    }

    class UpdateCommand extends ElementCommand {
    }
}

@enduml